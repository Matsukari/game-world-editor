#!/bin/bash

NAME="TestGame"
ASSETS="Assets"
CONTENT="Assets/Content"
LEVEL_EDITOR="/home/ark/Documents/game/tools/ldtk"
DESKTOP="Source/$NAME.Desktop"
CORE="Source/$NAME.Core"
NEZ="Vendor/Nez"

PROJECT_NAME=$NAME.Desktop
PROJECT=$DESKTOP

echo $NAME

pkill dotnet

if [[ $1 == "build" ]]; then
	dotnet build -c Debug $PROJECT
	dotnet run --project $PROJECT
elif [[ $1 == "run" ]]; then
  dotnet run --project $DESKTOP
elif [[ $1 == "last" ]]; then
    $DESKTOP/bin/Debug/net8.0/$PROJECT_NAME
elif [[ $1 == "runlog" ]]; then
  dotnet run --project $PROJECT > ./Logs/stdout.txt 2> ./Logs/stderr.txt

# Build the project in windows to be run with GDB and grant debuginfod in immediate mode
elif [[ $1 == "debug" ]]; then
  dotnet build --sc -c Release --os win $PROJECT
  gdb gdb -ex "run" --args $PROJECT/bin/Release/net8.0/win-x64/$PROJECT_NAME.exe <<EOF
y
EOF

elif [[ $1 == "content" ]]; then
  echo "Content pipeline $DESKTOP"
  cd $DESKTOP
  dotnet mgcb-editor ../../$CONTENT/Content.mgcb
  sleep 5
elif [[ $1 == "level" ]]; then
  echo "Level editor"
  cd $LEVEL_EDITOR/app
  npm run start
elif [[ $1 == "clean" ]]; then
  echo "Clear"
  rm -r $DESKTOP/bin
  rm -r $DESKTOP/obj
  rm -r $CORE/bin
  rm -r $CORE/obj
  rm -r $NEZ/Nez.ImGui/bin
  rm -r $NEZ/Nez.ImGui/obj
  rm -r $NEZ/Nez.Portable/bin
  rm -r $NEZ/Nez.Portable/obj
  rm -r $NEZ/Nez.Persistence/bin
  rm -r $NEZ/Nez.Persistence/obj
  rm -r $NEZ/Nez.FarseerPhysics/bin
  rm -r $NEZ/Nez.FarseerPhysics/obj
  cd $DESKTOP
  dotnet clean 
  dotnet restore
elif [[ $1 == "t4" ]]; then
  source ~/.zshrc > /dev/null 2>&1
  echo "Generating content paths..."
  t4 -o Source/$NAME.Core/ContentPathGenerator.cs Source/$NAME.Core/ContentPathGenerator.tt

  file_path=Source/$NAME.Core/ContentPathGenerator.cs
  new_content="class $ASSETS"

  sed -i 's/Nez/'"$NAME"'/g' "$file_path"
  sed -i 's/class Content/'"$new_content"'/g' "$file_path"
  sed -i "s|../../$ASSETS/||g" "$file_path"
  sed -i "s|.png||g" "$file_path"
  sed -i "s|.ttf||g" "$file_path"
  sed -i "s|.txt||g" "$file_path"
  sed -i "s|.json||g" "$file_path"
  sed -i "s|.fnt||g" "$file_path"
  sed -i "s|Raw/||g" "$file_path"
else 
  echo "Unrecognized"
fi


pkill dotnet
